trigger:
- main

variables:
- group: vm-credentials
- name: buildConfiguration
  value: 'Release'
- name: serviceConnection
  value: 'myapi-azure-connection'

stages:
- stage: Build
  displayName: Build Artifact
  jobs:
  - job: Build
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '6.x'

    - script: dotnet restore DotNet-RSA.sln
      displayName: 'Restore Packages'

    - script: dotnet build DotNet-RSA.sln --configuration $(buildConfiguration)
      displayName: 'Build Solution'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'drop'

- stage: Test
  displayName: Deploy to Test
  dependsOn: Build
  variables:
    websiteName: 'MyAPI-Test'
  jobs:
  - deployment: TestDeploy
    environment: Test
    pool:  # ADD THIS SECTION
      vmImage: 'windows-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
            
          - task: WindowsMachineFileCopy@2
            inputs:
              SourcePath: '$(Pipeline.Workspace)/drop'
              MachineNames: $(vmName)
              AdminUserName: $(vmAdmin)
              AdminPassword: $(vmAdminPassword)
              TargetPath: 'C:\Temp\Deploy'
              
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Testing SMB access..."
                Test-NetConnection -ComputerName $(vmIP) -Port 445
                if (-not (Test-Path "\\$(vmIP)\C$")) {
                  throw "SMB access failed"
                }

- stage: Stage
  displayName: Deploy to Stage
  dependsOn: Test
  condition: succeeded()
  variables:
    websiteName: 'MyAPI-Stage'
  jobs:
  - deployment: StageDeploy
    environment: Stage
    pool:  # ADD THIS SECTION
      vmImage: 'windows-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
            
          - task: WindowsMachineFileCopy@2
            inputs:
              SourcePath: '$(Pipeline.Workspace)/drop'
              MachineNames: $(vmName)
              AdminUserName: $(vmAdmin)
              AdminPassword: $(vmAdminPassword)
              TargetPath: 'C:\Temp\Deploy'
              
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Testing SMB access..."
                Test-NetConnection -ComputerName $(vmIP) -Port 445
                if (-not (Test-Path "\\$(vmIP)\C$")) {
                  throw "SMB access failed"
                }

- stage: Prod
  displayName: Deploy to Prod
  dependsOn: Stage
  condition: succeeded()
  variables:
    websiteName: 'MyAPI-Prod'
  jobs:
  - deployment: ProdDeploy
    environment: Prod
    pool:  # ADD THIS SECTION
      vmImage: 'windows-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
            
          - task: WindowsMachineFileCopy@2
            inputs:
              SourcePath: '$(Pipeline.Workspace)/drop'
              MachineNames: $(vmName)
              AdminUserName: $(vmAdmin)
              AdminPassword: $(vmAdminPassword)
              TargetPath: 'C:\Temp\Deploy'
              
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Testing SMB access..."
                Test-NetConnection -ComputerName $(vmIP) -Port 445
                if (-not (Test-Path "\\$(vmIP)\C$")) {
                  throw "SMB access failed"
                }