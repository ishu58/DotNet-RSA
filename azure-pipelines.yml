
trigger:
  - main
stages:
 - stage: "Build"
    jobs:
      - job: "BuildJob"
      pool:
      vmImage: 'windows-latest'
      
      variables:
      buildConfiguration: 'Release'
      steps:

        - task: DotNetCoreCLI@2
        displayName: "Restore Project"
        inputs:
        command: 'restore'
        projects: '**/*.csproj'

        - task: DotNetCoreCLI@2
        displayName : "Build Project"
        inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '-c $(buildConfiguration)'

        - task: DotNetCoreCLI@2
        displayName : "Build Project"
        inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '-c $(buildConfiguration) -o $(build.artifactstagingdirectory)'
        
        - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact'
        inputs:PathtoPublish: '$(build.artifactstagingdirectory)'

 - stage: "DeployToDev"
    dependsOn: "Build"
    jobs:
    - job:
    pool:
    vmImage: "windows-latest"
    steps:
    - download: current
    artifact: drop
    - task: AzureRmWebAppDeployment@4
    inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure Connection'
    appType: 'webApp'
    WebAppName: 'dssdemo1-dev'
    packageForLinux: '$(Pipeline.Workspace)/**/*.zip'

 - stage: "DeployToQA"
    dependsOn: "DeployToDev"
    jobs:
    - job:
    pool:
    vmImage: "windows-latest"
    steps:
    - download: current
    artifact: drop
    - task: AzureRmWebAppDeployment@4
    inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure Connection'
    appType: 'webApp'
    WebAppName: 'dssdemo1-qa'
    packageForLinux: '$(Pipeline.Workspace)/**/*.zip'

 - stage: "DeployToProd"
    dependsOn: "DeployToQA"
    jobs:
    - job:
    pool:
    vmImage: "windows-latest"
    steps:
    - download: current
    artifact: drop
    - task: AzureRmWebAppDeployment@4
    inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure Connection'
    appType: 'webApp'
    WebAppName: 'dssdemo1-prod'
    deployToSlotOrASE: true
    ResourceGroupName: 'DemoRG'
    SlotName: 'staging'
    packageForLinux: '$(Pipeline.Workspace)/**/*.zip'

    - task: AzureAppServiceManage@0
    inputs:
    azureSubscription: 'Azure Connection'
    Action: 'Swap Slots'
    WebAppName: 'dssdemo1-prod'
    ResourceGroupName: 'DemoRG'
    SourceSlot: 'staging'